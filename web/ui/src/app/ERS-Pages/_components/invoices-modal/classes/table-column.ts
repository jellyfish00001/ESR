import { TableColumnModel } from 'src/app/shared/models';
import { InvoiceDetail } from '../classes/data-item';

export const DetailTableColumn: TableColumnModel[] = [
  {
    title: ('invoice-date'),
    columnKey: 'invdate',
    columnWidth: '90px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.invdate.localeCompare(b.invdate),
  },
  {
    title: ('exp-invoicecategory'),
    columnKey: 'invtype',
    columnWidth: '90px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.invtype.localeCompare(b.invtype),
  },
  {
    title: ('invoice-no'),
    columnKey: 'invno',
    columnWidth: '175px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.invno.localeCompare(b.invno),
  },
  {
    title: ('invoice-code'),
    columnKey: 'invcode',
    columnWidth: '175px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.invcode.localeCompare(b.invcode),
  },
  {
    title: ('col.total-invoice-value'),
    columnKey: 'oamount',
    columnWidth: '175px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.oamount - b.oamount,
  },
  {
    title: ('col.currency'),
    columnKey: 'curr',
    columnWidth: '175px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.curr.localeCompare(b.curr),
  },
  {
    title: ('amount'),
    columnKey: 'amount',
    columnWidth: '175px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.amount - b.amount,
  },
  {
    title: ('tax-amount'),
    columnKey: 'taxamount',
    columnWidth: '175px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.taxamount - b.taxamount,
  },
  {
    title: ('purchaser-name'),
    columnKey: 'paymentName',
    columnWidth: '185px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.paymentName.localeCompare(b.paymentName),
  },
  {
    title: ('seller-name'),
    columnKey: 'collectionName',
    columnWidth: '200px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.collectionName.localeCompare(b.collectionName),
  },
  {
    title: ('taxpayer-no'),
    columnKey: 'identificationno',
    columnWidth: '200px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.sellertaxid.localeCompare(b.sellertaxid),
  },
  {
    title: ('invoiceSource'),
    columnKey: 'source',
    columnWidth: '200px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.source.localeCompare(b.source),
  },
  {
    title: ('causes-of-exceptions'),
    columnKey: 'expdesc',
    columnWidth: '160px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.expdesc.localeCompare(b.expdesc),
  },
  {
    title: ('afford-party'),
    columnKey: 'responsibleparty',
    columnWidth: '160px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.affordParty.localeCompare(b.affordParty),
  },
  {
    title: ('tax-loss'),
    columnKey: 'taxloss',
    columnWidth: '105px',
    align: 'right',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.taxloss - b.taxloss,
  },
  {
    title: ('col.remark'),
    columnKey: 'remark',
    columnWidth: '100px',
    align: 'left',
    sortFn: (a: InvoiceDetail, b: InvoiceDetail) => a.remark.localeCompare(b.remark),
  },
];
