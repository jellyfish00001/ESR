import { TableColumnModel } from 'src/app/shared/models';
import { OverdueChargeAgainstDetail } from '../../rq401/classes/data-item';
import { ExceptionDetail, GeneralExpenseInfo } from './data-item';

export const DetailTableColumn: TableColumnModel[] = [
  {
    title: ('invoice-code'),
    columnKey: 'invoiceCode',
    columnWidth: '20%',
    align: 'center',
    sortFn: (a: ExceptionDetail, b: ExceptionDetail) =>
      a.invoiceCode.localeCompare(b.invoiceCode),
  },
  {
    title: ('invoice-no'),
    columnKey: 'invoiceNo',
    columnWidth: '15%',
    align: 'center',
    sortFn: (a: ExceptionDetail, b: ExceptionDetail) => a.invoiceNo.localeCompare(b.invoiceNo),
  },
  {
    title: ('exception-expense-amount'),
    columnKey: 'oamount',
    columnWidth: '',
    align: 'center',
    sortFn: (a: ExceptionDetail, b: ExceptionDetail) => a.oamount - b.oamount,
  },
  {
    title: ('tax-loss'),
    columnKey: 'taxLoss',
    columnWidth: '23%',
    align: 'center',
    sortFn: (a: ExceptionDetail, b: ExceptionDetail) => a.taxLoss - b.taxLoss,
  },
  {
    title: ('afford-party'),
    columnKey: 'affordParty',
    columnWidth: '13%',
    align: 'center',
    sortFn: (a: ExceptionDetail, b: ExceptionDetail) => a.affordParty.localeCompare(b.affordParty),
  }
];

export const ExpenseTableColumn: TableColumnModel[] = [
  {
    title: ('date-of-expense'),
    columnKey: 'feeDate',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.feeDate.localeCompare(b.feeDate),
  },
  {
    title: ('receiver-emplid'),
    columnKey: 'payeeId',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.payeeId.localeCompare(b.payeeId),
  },
  {
    title: ('payee-name'),
    columnKey: 'payeeName',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.payeeName.localeCompare(b.payeeName),
  },
  {
    title: ('payee-deptid'),
    columnKey: 'payeeDeptid',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.payeeDeptid.localeCompare(b.payeeDeptid),
  },
  {
    title: ('bank-name'),
    columnKey: 'bankName',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.bankName.localeCompare(b.bankName),
  },
  {
    title: ('digest'),
    columnKey: 'digest',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.digest.localeCompare(b.digest),
  },
  {
    title: ('col.expense-attribution-department'),
    columnKey: 'attribDept',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.attribDept.localeCompare(b.attribDept),
  },
  {
    title: ('col.currency'),
    columnKey: 'curr',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.curr.localeCompare(b.curr),
  },
  {
    title: ('reimbursement-amount'),
    columnKey: 'expenseAmt',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.expenseAmt - b.expenseAmt,
  },
  {
    title: ('col.exchange-rate'),
    columnKey: 'exchangeRate',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.exchangeRate - b.exchangeRate,
  },
  {
    title: ('col.conversion-to-local-currency'),
    columnKey: 'toLocalAmt',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.toLocalAmt - b.toLocalAmt,
  },
];

export const OvertimeMealExpenseTableColumn: TableColumnModel[] = [
  {
    title: ('date-of-expense'),
    columnKey: 'feeDate',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.feeDate.localeCompare(b.feeDate),
  },
  {
    title: ('receiver-emplid'),
    columnKey: 'payeeId',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.payeeId.localeCompare(b.payeeId),
  },
  {
    title: ('payee'),
    columnKey: 'payeeName',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.payeeName.localeCompare(b.payeeName),
  },
  {
    title: ('payee-deptid'),
    columnKey: 'payeeDeptid',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.payeeDeptid.localeCompare(b.payeeDeptid),
  },
  {
    title: ('col.expense-attribution-department'),
    columnKey: 'attribDept',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.attribDept.localeCompare(b.attribDept),
  },
  {
    title: ('bank-name'),
    columnKey: 'bankName',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.bankName.localeCompare(b.bankName),
  },
  {
    title: ('city-on-business'),
    columnKey: 'cityOnBusiness',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.cityOnBusiness.localeCompare(b.cityOnBusiness),
  },
  {
    title: ('start-time'),
    columnKey: 'startingTime',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.startingTime.localeCompare(b.startingTime),
  },
  {
    title: ('back-time'),
    columnKey: 'backTime',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.backTime.localeCompare(b.backTime),
  },
  {
    title: ('col.currency'),
    columnKey: 'curr',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.curr.localeCompare(b.curr),
  },
  {
    title: ('reimbursement-amount'),
    columnKey: 'expenseAmt',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.expenseAmt - b.expenseAmt,
  },
  {
    title: ('col.exchange-rate'),
    columnKey: 'exchangeRate',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.exchangeRate - b.exchangeRate,
  },
  {
    title: ('col.conversion-to-local-currency'),
    columnKey: 'toLocalAmt',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.toLocalAmt - b.toLocalAmt,
  },
  {
    title: ('digest'),
    columnKey: 'digest',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.digest.localeCompare(b.digest),
  },
];

export const DriveFuelExpenseTableColumn: TableColumnModel[] = [
  {
    title: ('date-of-expense'),
    columnKey: 'feeDate',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.feeDate.localeCompare(b.feeDate),
  },
  {
    title: ('receiver-emplid'),
    columnKey: 'payeeId',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.payeeId.localeCompare(b.payeeId),
  },
  {
    title: ('payee'),
    columnKey: 'payeeName',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.payeeName.localeCompare(b.payeeName),
  },
  {
    title: ('payee-deptid'),
    columnKey: 'payeeDeptid',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.payeeDeptid.localeCompare(b.payeeDeptid),
  },
  {
    title: ('col.expense-attribution-department'),
    columnKey: 'attribDept',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.attribDept.localeCompare(b.attribDept),
  },
  {
    title: ('bank-name'),
    columnKey: 'bankName',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.bankName.localeCompare(b.bankName),
  },
  {
    title: ('starting-place'),
    columnKey: 'startingPlace',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.startingPlace.localeCompare(b.startingPlace),
  },
  {
    title: ('vehicle-type'),
    columnKey: 'carTypeName',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.carTypeName.localeCompare(b.carTypeName),
  },
  {
    title: ('kil'),
    columnKey: 'kil',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.kil - b.kil,
  },
  {
    title: ('col.currency'),
    columnKey: 'curr',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.curr.localeCompare(b.curr),
  },
  {
    title: ('reimbursement-amount'),
    columnKey: 'expenseAmt',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.expenseAmt - b.expenseAmt,
  },
  {
    title: ('col.exchange-rate'),
    columnKey: 'exchangeRate',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.exchangeRate - b.exchangeRate,
  },
  {
    title: ('col.conversion-to-local-currency'),
    columnKey: 'toLocalAmt',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.toLocalAmt - b.toLocalAmt,
  },
  {
    title: ('digest'),
    columnKey: 'digest',
    columnWidth: '',
    align: 'center',
    sortFn: (a: GeneralExpenseInfo, b: GeneralExpenseInfo) => a.digest.localeCompare(b.digest),
  },
];
