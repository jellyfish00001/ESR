import { TableColumnModel } from 'src/app/shared/models';
import { FormDetail } from './data-item';

export const DetailTableColumn: TableColumnModel[] = [
  {
    title: 'tripId',
    columnKey: 'tripId',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.tripId || '').localeCompare(b.tripId || ''),
  },
  {
    title: 'transactionTimestamp',
    columnKey: 'transactionTimestamp',
    columnWidth: '160px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.transactionTimestamp || '').localeCompare(b.transactionTimestamp || ''),
  },
  {
    title: 'requestDateUtc',
    columnKey: 'requestDateUtc',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.requestDateUtc || '').localeCompare(b.requestDateUtc || ''),
  },
  {
    title: 'requestTimeUtc',
    columnKey: 'requestTimeUtc',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.requestTimeUtc || '').localeCompare(b.requestTimeUtc || ''),
  },
  {
    title: 'requestDate',
    columnKey: 'requestDate',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.requestDate || '').localeCompare(b.requestDate || ''),
  },
  {
    title: 'requestTime',
    columnKey: 'requestTime',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.requestTime || '').localeCompare(b.requestTime || ''),
  },
  {
    title: 'dropOffDateUtc',
    columnKey: 'dropOffDateUtc',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.dropOffDateUtc || '').localeCompare(b.dropOffDateUtc || ''),
  },
  {
    title: 'dropOffTimeUtc',
    columnKey: 'dropOffTimeUtc',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.dropOffTimeUtc || '').localeCompare(b.dropOffTimeUtc || ''),
  },
  {
    title: 'dropOffDate',
    columnKey: 'dropOffDate',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.dropOffDate || '').localeCompare(b.dropOffDate || ''),
  },
  {
    title: 'dropOffTime',
    columnKey: 'dropOffTime',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.dropOffTime || '').localeCompare(b.dropOffTime || ''),
  },
  {
    title: 'requestTimezoneOffsetFromUtc',
    columnKey: 'requestTimezoneOffsetFromUtc',
    columnWidth: '80px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.requestTimezoneOffsetFromUtc || '').localeCompare(b.requestTimezoneOffsetFromUtc || ''),
  },
  {
    title: 'firstName',
    columnKey: 'firstName',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.firstName || '').localeCompare(b.firstName || ''),
  },
  {
    title: 'lastName',
    columnKey: 'lastName',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.lastName || '').localeCompare(b.lastName || ''),
  },
  {
    title: 'email',
    columnKey: 'email',
    columnWidth: '180px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.email || '').localeCompare(b.email || ''),
  },
  {
    title: 'employeeId',
    columnKey: 'employeeId',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.employeeId || '').localeCompare(b.employeeId || ''),
  },
  {
    title: 'service',
    columnKey: 'service',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.service || '').localeCompare(b.service || ''),
  },
  {
    title: 'city',
    columnKey: 'city',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.city || '').localeCompare(b.city || ''),
  },
  {
    title: 'distance',
    columnKey: 'distance',
    columnWidth: '80px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.distance ?? 0) - (b.distance ?? 0),
  },
  {
    title: 'duration',
    columnKey: 'duration',
    columnWidth: '80px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.duration ?? 0) - (b.duration ?? 0),
  },
  {
    title: 'pickupAddress',
    columnKey: 'pickupAddress',
    columnWidth: '200px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.pickupAddress || '').localeCompare(b.pickupAddress || ''),
  },
  {
    title: 'dropOffAddress',
    columnKey: 'dropOffAddress',
    columnWidth: '200px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.dropOffAddress || '').localeCompare(b.dropOffAddress || ''),
  },
  {
    title: 'expenseCode',
    columnKey: 'expenseCode',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.expenseCode || '').localeCompare(b.expenseCode || ''),
  },
  {
    title: 'expenseMemo',
    columnKey: 'expenseMemo',
    columnWidth: '200px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.expenseMemo || '').localeCompare(b.expenseMemo || ''),
  },
  {
    title: 'invoices',
    columnKey: 'invoices',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.invoices || '').localeCompare(b.invoices || ''),
  },
  {
    title: 'program',
    columnKey: 'program',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.program || '').localeCompare(b.program || ''),
  },
  {
    title: 'group',
    columnKey: 'group',
    columnWidth: '80px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.group || '').localeCompare(b.group || ''),
  },
  {
    title: 'paymentMethod',
    columnKey: 'paymentMethod',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.paymentMethod || '').localeCompare(b.paymentMethod || ''),
  },
  {
    title: 'transactionType',
    columnKey: 'transactionType',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.transactionType || '').localeCompare(b.transactionType || ''),
  },
  {
    title: 'fareInLocalCurrency',
    columnKey: 'fareInLocalCurrency',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.fareInLocalCurrency ?? 0) - (b.fareInLocalCurrency ?? 0),
  },
  {
    title: 'taxesInLocalCurrency',
    columnKey: 'taxesInLocalCurrency',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.taxesInLocalCurrency ?? 0) - (b.taxesInLocalCurrency ?? 0),
  },
  {
    title: 'tipInLocalCurrency',
    columnKey: 'tipInLocalCurrency',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.tipInLocalCurrency ?? 0) - (b.tipInLocalCurrency ?? 0),
  },
  {
    title: 'transactionAmountInLocalCurrency',
    columnKey: 'transactionAmountInLocalCurrency',
    columnWidth: '160px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.transactionAmountInLocalCurrency ?? 0) - (b.transactionAmountInLocalCurrency ?? 0),
  },
  {
    title: 'localCurrencyCode',
    columnKey: 'localCurrencyCode',
    columnWidth: '80px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.localCurrencyCode || '').localeCompare(b.localCurrencyCode || ''),
  },
  {
    title: 'fareInHomeCurrency',
    columnKey: 'fareInHomeCurrency',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.fareInHomeCurrency ?? 0) - (b.fareInHomeCurrency ?? 0),
  },
  {
    title: 'taxesInHomeCurrency',
    columnKey: 'taxesInHomeCurrency',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.taxesInHomeCurrency ?? 0) - (b.taxesInHomeCurrency ?? 0),
  },
  {
    title: 'tipInHomeCurrency',
    columnKey: 'tipInHomeCurrency',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.tipInHomeCurrency ?? 0) - (b.tipInHomeCurrency ?? 0),
  },
  {
    title: 'transactionAmountInHomeCurrency',
    columnKey: 'transactionAmountInHomeCurrency',
    columnWidth: '160px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.transactionAmountInHomeCurrency ?? 0) - (b.transactionAmountInHomeCurrency ?? 0),
  },
  {
    title: 'estimatedServiceAndTechnologyFee',
    columnKey: 'estimatedServiceAndTechnologyFee',
    columnWidth: '180px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.estimatedServiceAndTechnologyFee ?? 0) - (b.estimatedServiceAndTechnologyFee ?? 0),
  },
  {
    title: 'rno',
    columnKey: 'rno',
    columnWidth: '120px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.rno || '').localeCompare(b.rno || ''),
  },
  {
    title: 'signStatus',
    columnKey: 'signStatus',
    columnWidth: '80px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.signStatus || '').localeCompare(b.signStatus || ''),
  },
  {
    title: 'fileName',
    columnKey: 'fileName',
    columnWidth: '180px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.fileName || '').localeCompare(b.fileName || ''),
  },
  {
    title: 'company',
    columnKey: 'company',
    columnWidth: '100px',
    align: 'center',
    sortFn: (a: FormDetail, b: FormDetail) => (a.company || '').localeCompare(b.company || ''),
  },
];